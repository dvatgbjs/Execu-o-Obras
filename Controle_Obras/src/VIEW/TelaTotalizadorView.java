/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package VIEW;


import DAO.TotalizadorDAO;
import DTO.ExecucaoDeServicoDTO;
import java.awt.event.ItemEvent;

import java.awt.event.ItemListener;
import DAO.ConexaoBD;
import DAO.ExecucaoDeServicoDAO;
import DAO.MateriaisDAO;
import DTO.MateriaisDTO;
import VIEW.TelaListaMateriais;
import com.mysql.cj.xdevapi.Statement;

import java.sql.Connection;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import java.awt.event.ItemEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.FileOutputStream;

import java.sql.ResultSet;
import java.util.Vector;
import java.sql.SQLException;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;

import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JButton;

import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

import javax.swing.JPopupMenu;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.sql.PreparedStatement;

import java.sql.DriverManager;
import java.text.NumberFormat;
import java.util.HashSet;
import java.util.Locale;
import java.util.Set;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

import javax.swing.event.PopupMenuEvent;
import javax.swing.event.PopupMenuListener;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import org.jdesktop.swingx.util.OS;

/**
 *
 * @author jateixeira
 */
public class TelaTotalizadorView extends javax.swing.JFrame {
    private Connection connection;
    
    /**
     * Creates new form TelaTotalizadorView
     */
    public TelaTotalizadorView() throws SQLException {
        initComponents();
        setLocationRelativeTo(null);
        initializeDataBaseConnection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        NMedicaoTotal = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        TotalField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Totalizadores");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/pref png1.png"))); // NOI18N

        jButton1.setBackground(new java.awt.Color(153, 153, 153));
        jButton1.setText("Voltar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "OS", "N° Medição", "Itens", "Quantidade", "Subtotal"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton2.setBackground(new java.awt.Color(102, 204, 255));
        jButton2.setText("Consultar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Número de Medição:");

        TotalField.setEditable(false);

        jLabel3.setText("Total:");

        jButton3.setText("Exportar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(NMedicaoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(TotalField, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(70, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(223, 223, 223))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel1)
                .addGap(69, 69, 69)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NMedicaoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(TotalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(49, 49, 49))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            TelaExecucaodeServicoView execucaoServico = new TelaExecucaodeServicoView();
            execucaoServico.setVisible(true);
            this.dispose();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TelaTotalizadorView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TelaTotalizadorView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ListarTotalizador();
        somaSubtotal();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Obtenha os dados da JTable
    List<ExecucaoDeServicoDTO> lista = new ArrayList<>();
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    
    for (int i = 0; i < model.getRowCount(); i++) {
        ExecucaoDeServicoDTO dto = new ExecucaoDeServicoDTO();
        dto.setOS(model.getValueAt(i, 0).toString());
        dto.setN_medicao(model.getValueAt(i, 1).toString());
        dto.setNomeMaterial(model.getValueAt(i, 2).toString());
        dto.setQuantidadeMaterial(model.getValueAt(i, 3).toString());
        dto.setSubtotal(model.getValueAt(i, 4).toString());
        lista.add(dto);
    }

    // Captura o valor do TotalField
    String filePath = "C:\\Users\\jateixeira\\Desktop\\planilhas obras\\TOTAL MEDICOES.xlsx"; // Ajuste o caminho conforme necessário
    String N_Medicao = NMedicaoTotal.getText(); // Captura o número da medição
    
    // Chama o método para exportar
    try {
        exportarTotalizadores(lista, filePath, N_Medicao);
        JOptionPane.showMessageDialog(null, "EXPORTADO COM SUCESSO!!");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Erro ao exportar: " + e.getMessage());
        e.printStackTrace();
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaTotalizadorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaTotalizadorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaTotalizadorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaTotalizadorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TelaTotalizadorView().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(TelaTotalizadorView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NMedicaoTotal;
    private javax.swing.JTextField TotalField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    private void initializeDataBaseConnection() throws SQLException{
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            connection = DriverManager.getConnection(
            "jdbc:mysql://localhost:3306/projetoobras?serverTimezone=America/Sao_Paulo", "root", "1234");
        }catch (ClassNotFoundException e){
            e.printStackTrace();
            throw new SQLException("MySQL Driver not found");
        }
    }
    private void ListarTotalizador(){
        TotalizadorDAO totalizadorDAO = new TotalizadorDAO();
        
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        model.setNumRows(0);
        
        String N_medicao = NMedicaoTotal.getText();
        
        System.out.println("Valor do campo N° Medicao: '" + N_medicao + "'");
        
        try{
            
            List<ExecucaoDeServicoDTO> lista = totalizadorDAO.ListarTotalizador(N_medicao);
            
            for(int i = 0;i<lista.size();i++){
                
                model.addRow(new Object[]{
                    lista.get(i).getOS(),
                    lista.get(i).getN_medicao(),
                    lista.get(i).getNomeMaterial(),
                    lista.get(i).getQuantidadeMaterial(),
                    lista.get(i).getSubtotal(),
                });
            }
            if(lista.isEmpty()){
                JOptionPane.showMessageDialog(null, "Nenhum dado encontrado para a medicao fornecida");
            } else{
                System.out.println("Dados encontrados: " + lista.size());
            }
        } catch(ClassNotFoundException e){
            JOptionPane.showMessageDialog(null, "Erro ao consultar dados: " + e.getMessage());
            e.printStackTrace();
        }
    }
    private void somaSubtotal(){
        String nMedicao = NMedicaoTotal.getText();
 
        String sql = "SELECT SUM(subTotal) FROM ExecucaoObras WHERE N_medicao = ?";
        
        try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/projetoobras?serverTimezone=America/Sao_Paulo", "root", "1234");
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setString(1, nMedicao);
            ResultSet rs = pstmt.executeQuery();

            if (rs.next()) {
                
                double soma = rs.getDouble(1);
                NumberFormat currencyFormat = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));
                TotalField.setText(currencyFormat.format(soma));
            } 
            else {
                TotalField.setText("0");
            }

        } catch (Exception ex) {
            ex.printStackTrace();
            TotalField.setText("Erro");
        }
    }
    
    
    private void exportarTotalizadores(List<ExecucaoDeServicoDTO> listar, String filePath, String N_Medicao) throws ClassNotFoundException {
          
        String Total = TotalField.getText().trim();
        
        try (Workbook workbook = new XSSFWorkbook()) {
        Sheet sheet = workbook.createSheet("Dados"); // Cria uma nova planilha com o nome "Dados"

        int rowIndex = 0;
        Row headerRow = sheet.createRow(rowIndex++);
        
       

        // Define o cabeçalho das colunas da planilha
        headerRow.createCell(0).setCellValue("OS");
        headerRow.createCell(1).setCellValue("n° Medicao");
        headerRow.createCell(2).setCellValue("Itens");
        headerRow.createCell(3).setCellValue("Quantidade");
        headerRow.createCell(4).setCellValue("SubTotal"); 
        
        

        // Preenche os dados na planilha a partir da lista de DTOs
    for (ExecucaoDeServicoDTO dto : listar) {
                Row dataRow = sheet.createRow(rowIndex++);
                
                dataRow.createCell(0).setCellValue(dto.getOS() );
                dataRow.createCell(1).setCellValue(dto.getN_medicao() );
                dataRow.createCell(2).setCellValue(dto.getNomeMaterial() );
                dataRow.createCell(3).setCellValue(dto.getQuantidadeMaterial() );
                dataRow.createCell(4).setCellValue(dto.getSubtotal());
            }
    
    sheet.createRow(rowIndex++);//CRIA UMA LINHA VAZIA
    
    
    
        // Adiciona uma linha para o total
        Row totalRow = sheet.createRow(rowIndex++);
        
        totalRow.createCell(3).setCellValue("TOTAL:"); // Coluna do subtotal
        totalRow.createCell(4).setCellValue(Total); // Coluna do subtotal
        

        // Mensagem que avisa onde a planilha está/ Salva a mesma
        try (FileOutputStream outputStream = new FileOutputStream(filePath)) {
            workbook.write(outputStream);
            System.out.println("Planilha exportada com sucesso para: " + filePath);
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
        
        TotalizadorDAO dao = new TotalizadorDAO();
        
        List<ExecucaoDeServicoDTO> listaConsultas = dao.ListarTotalizador( N_Medicao); // Chamada correta
        String DocumentsTeste = "C:\\Users\\jateixeira\\Desktop\\planilhas obras\\TOTAL MEDICOES.xlsx"; //ajusta o caminho p achar a planilha
        
        dao.exportarTotalizadores(listaConsultas, DocumentsTeste);

        JOptionPane.showMessageDialog(null, "EXPORTADO COM SUCESSO!!");
    }
    
    
    }
       




